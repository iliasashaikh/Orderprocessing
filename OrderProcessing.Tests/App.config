<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <sectionGroup name="common">
      <section name="logging" type="Common.Logging.ConfigurationSectionHandler, Common.Logging" />
    </sectionGroup>
    <sectionGroup name="spring">
      <section name="context" type="Spring.Context.Support.ContextHandler, Spring.Core"/>
      <section name="objects" type="Spring.Context.Support.DefaultSectionHandler, Spring.Core" />
    </sectionGroup>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net" />
  </configSections>

  <common>
    <logging>
      <factoryAdapter type="Common.Logging.Log4Net.Log4NetLoggerFactoryAdapter, Common.Logging.Log4Net">
        <!-- choices are INLINE, FILE, FILE-WATCH, EXTERNAL-->
        <!-- otherwise BasicConfigurer.Configure is used   -->
        <!-- log4net configuration file is specified with key configFile-->
        <arg key="configType" value="INLINE" />
      </factoryAdapter>
    </logging>
  </common>
  
  <spring>
    <context>
      <resource uri="config://spring/objects"/>
    </context>

    <objects xmlns="http://www.springframework.net" >

      <object id="dacManager"
              type="OrderProcessingDomain.DACManager, OrderProcessingDomain"
              singleton="true"
              >
      </object>

      <object id="repositoryFactory"
              type="OrderProcessingDomain.Repository, OrderProcessingDomain"
              singleton="true">
      </object>

      <object id="nhRepository"
              type="OrderProcessingDomain.NHRepository, OrderProcessingDomain"
              singleton="true">
      </object>

      <object id="objectRepository"
              type="OrderProcessingDomain.ObjectRepository, OrderProcessingDomain"
              singleton="true">
      </object>

      <object id="objectDataAccessContext"
              type="OrderProcessingDomain.ObjectDataAccessContext, OrderProcessingDomain"
              singleton="true">
      </object>

      <object id="nhDataAccessContext"
              type="OrderProcessingDomain.NHDataAccessContext, OrderProcessingDomain"
              singleton="false">
      </object>

      <object type="Spring.Objects.Factory.Attributes.RequiredAttributeObjectPostProcessor, Spring.Core"/>

    </objects>

  </spring>
  <appSettings>
    <add key="connectionString" value="Data Source=.;Initial Catalog=Northwind;Integrated Security=true;"/>
  </appSettings>
  
  <runtime>
    <assemblyBinding>
      <dependentAssembly>
        <assemblyIdentity name="Castle.DynamicProxy2" publicKeyToken="407dd0808d44fbdc" culture="neutral">
          <bindingRedirect oldVersion="2.1.0.0"
                           newVersion="2.2.0.6628">
            
          </bindingRedirect>
        </assemblyIdentity>
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <system.serviceModel>
    <bindings>
      <netTcpBinding>
        <binding name="OrderStatus" closeTimeout="00:01:00" openTimeout="00:01:00"
          receiveTimeout="00:10:00" sendTimeout="00:01:00" transactionFlow="false"
          transferMode="Buffered" transactionProtocol="OleTransactions"
          hostNameComparisonMode="StrongWildcard" listenBacklog="10" maxBufferPoolSize="524288"
          maxBufferSize="65536" maxConnections="10" maxReceivedMessageSize="65536">
          <readerQuotas maxDepth="32" maxStringContentLength="8192" maxArrayLength="16384"
            maxBytesPerRead="4096" maxNameTableCharCount="16384" />
          <reliableSession ordered="true" inactivityTimeout="00:10:00"
            enabled="false" />
          <security mode="Transport">
            <transport clientCredentialType="Windows" protectionLevel="EncryptAndSign">
              <extendedProtectionPolicy policyEnforcement="Never" />
            </transport>
            <message clientCredentialType="Windows" />
          </security>
        </binding>
      </netTcpBinding>
    </bindings>
    <client>
      <endpoint address="net.tcp://localhost:8732/Design_Time_Addresses/OrderService/Status"
        binding="netTcpBinding" bindingConfiguration="OrderStatus" contract="ServiceReference1.IStatus"
        name="OrderStatus">
        <identity>
          <dns value="localhost" />
        </identity>
      </endpoint>
    </client>
  </system.serviceModel>
</configuration>