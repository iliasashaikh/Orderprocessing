//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OrderProcessing.Tests.EmployeeQueryServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmployeeQueryServiceReference.IEmployeeQueryService")]
    public interface IEmployeeQueryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryServiceBaseOf_Employee/All", ReplyAction="http://tempuri.org/IQueryServiceBaseOf_Employee/AllResponse")]
        OrderProcessingDomain.Employee[] All();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IQueryServiceBaseOf_Employee/All", ReplyAction="http://tempuri.org/IQueryServiceBaseOf_Employee/AllResponse")]
        System.IAsyncResult BeginAll(System.AsyncCallback callback, object asyncState);
        
        OrderProcessingDomain.Employee[] EndAll(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryServiceBaseOf_Employee/Count", ReplyAction="http://tempuri.org/IQueryServiceBaseOf_Employee/CountResponse")]
        long Count();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IQueryServiceBaseOf_Employee/Count", ReplyAction="http://tempuri.org/IQueryServiceBaseOf_Employee/CountResponse")]
        System.IAsyncResult BeginCount(System.AsyncCallback callback, object asyncState);
        
        long EndCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IQueryServiceBaseOf_Employee/First", ReplyAction="http://tempuri.org/IQueryServiceBaseOf_Employee/FirstResponse")]
        OrderProcessingDomain.Employee First();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IQueryServiceBaseOf_Employee/First", ReplyAction="http://tempuri.org/IQueryServiceBaseOf_Employee/FirstResponse")]
        System.IAsyncResult BeginFirst(System.AsyncCallback callback, object asyncState);
        
        OrderProcessingDomain.Employee EndFirst(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IEmployeeQueryServiceChannel : OrderProcessing.Tests.EmployeeQueryServiceReference.IEmployeeQueryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class AllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OrderProcessingDomain.Employee[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OrderProcessingDomain.Employee[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class CountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public long Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class FirstCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FirstCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public OrderProcessingDomain.Employee Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((OrderProcessingDomain.Employee)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class EmployeeQueryServiceClient : System.ServiceModel.ClientBase<OrderProcessing.Tests.EmployeeQueryServiceReference.IEmployeeQueryService>, OrderProcessing.Tests.EmployeeQueryServiceReference.IEmployeeQueryService {
        
        private BeginOperationDelegate onBeginAllDelegate;
        
        private EndOperationDelegate onEndAllDelegate;
        
        private System.Threading.SendOrPostCallback onAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginCountDelegate;
        
        private EndOperationDelegate onEndCountDelegate;
        
        private System.Threading.SendOrPostCallback onCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginFirstDelegate;
        
        private EndOperationDelegate onEndFirstDelegate;
        
        private System.Threading.SendOrPostCallback onFirstCompletedDelegate;
        
        public EmployeeQueryServiceClient() {
        }
        
        public EmployeeQueryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmployeeQueryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeQueryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeQueryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<AllCompletedEventArgs> AllCompleted;
        
        public event System.EventHandler<CountCompletedEventArgs> CountCompleted;
        
        public event System.EventHandler<FirstCompletedEventArgs> FirstCompleted;
        
        public OrderProcessingDomain.Employee[] All() {
            return base.Channel.All();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAll(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAll(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OrderProcessingDomain.Employee[] EndAll(System.IAsyncResult result) {
            return base.Channel.EndAll(result);
        }
        
        private System.IAsyncResult OnBeginAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginAll(callback, asyncState);
        }
        
        private object[] OnEndAll(System.IAsyncResult result) {
            OrderProcessingDomain.Employee[] retVal = this.EndAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAllCompleted(object state) {
            if ((this.AllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AllCompleted(this, new AllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AllAsync() {
            this.AllAsync(null);
        }
        
        public void AllAsync(object userState) {
            if ((this.onBeginAllDelegate == null)) {
                this.onBeginAllDelegate = new BeginOperationDelegate(this.OnBeginAll);
            }
            if ((this.onEndAllDelegate == null)) {
                this.onEndAllDelegate = new EndOperationDelegate(this.OnEndAll);
            }
            if ((this.onAllCompletedDelegate == null)) {
                this.onAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAllCompleted);
            }
            base.InvokeAsync(this.onBeginAllDelegate, null, this.onEndAllDelegate, this.onAllCompletedDelegate, userState);
        }
        
        public long Count() {
            return base.Channel.Count();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCount(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCount(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public long EndCount(System.IAsyncResult result) {
            return base.Channel.EndCount(result);
        }
        
        private System.IAsyncResult OnBeginCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginCount(callback, asyncState);
        }
        
        private object[] OnEndCount(System.IAsyncResult result) {
            long retVal = this.EndCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCountCompleted(object state) {
            if ((this.CountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CountCompleted(this, new CountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CountAsync() {
            this.CountAsync(null);
        }
        
        public void CountAsync(object userState) {
            if ((this.onBeginCountDelegate == null)) {
                this.onBeginCountDelegate = new BeginOperationDelegate(this.OnBeginCount);
            }
            if ((this.onEndCountDelegate == null)) {
                this.onEndCountDelegate = new EndOperationDelegate(this.OnEndCount);
            }
            if ((this.onCountCompletedDelegate == null)) {
                this.onCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCountCompleted);
            }
            base.InvokeAsync(this.onBeginCountDelegate, null, this.onEndCountDelegate, this.onCountCompletedDelegate, userState);
        }
        
        public OrderProcessingDomain.Employee First() {
            return base.Channel.First();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginFirst(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFirst(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public OrderProcessingDomain.Employee EndFirst(System.IAsyncResult result) {
            return base.Channel.EndFirst(result);
        }
        
        private System.IAsyncResult OnBeginFirst(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginFirst(callback, asyncState);
        }
        
        private object[] OnEndFirst(System.IAsyncResult result) {
            OrderProcessingDomain.Employee retVal = this.EndFirst(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFirstCompleted(object state) {
            if ((this.FirstCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FirstCompleted(this, new FirstCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FirstAsync() {
            this.FirstAsync(null);
        }
        
        public void FirstAsync(object userState) {
            if ((this.onBeginFirstDelegate == null)) {
                this.onBeginFirstDelegate = new BeginOperationDelegate(this.OnBeginFirst);
            }
            if ((this.onEndFirstDelegate == null)) {
                this.onEndFirstDelegate = new EndOperationDelegate(this.OnEndFirst);
            }
            if ((this.onFirstCompletedDelegate == null)) {
                this.onFirstCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFirstCompleted);
            }
            base.InvokeAsync(this.onBeginFirstDelegate, null, this.onEndFirstDelegate, this.onFirstCompletedDelegate, userState);
        }
    }
}
